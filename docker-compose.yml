version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: local-postgres16
    restart: unless-stopped
    ports:
      - "${PG_PORT}:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      TZ: "Asia/Tokyo"
    volumes:
      - pg_data:/var/lib/postgresql/data
      # 可选：初始化脚本（建扩展/额外角色等）
      - ./init/pg-init.sql:/docker-entrypoint-initdb.d/pg-init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT}:8080"
    depends_on:
      - postgres

  mongo:
    image: mongo:7
    container_name: local-mongo7
    restart: unless-stopped
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      TZ: "Asia/Tokyo"
    volumes:
      - mongo_data:/data/db
      - ./init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "--username", "${MONGO_INITDB_ROOT_USERNAME}", "--password", "${MONGO_INITDB_ROOT_PASSWORD}", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 20

  mongo-express:
    image: mongo-express:1
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: "${MONGO_INITDB_ROOT_USERNAME}"
      ME_CONFIG_MONGODB_ADMINPASSWORD: "${MONGO_INITDB_ROOT_PASSWORD}"
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongo

volumes:
  pg_data:
  mongo_data: